@page "/projects/edit/{ProjectSlug}"
@inject Portfolio.Blazor.DataProvider.ApiService ApiService
@inject NavigationManager NavManager

<h3>Edit Project</h3>

<label>Title</label>
<br />
<textarea @bind="TitleField"></textarea>
<br />
<br />

<label>@RequirementsField</label>
<br />
<textarea @bind="RequirementsField"></textarea>
<br />
<br />

<label>Design</label>
<br />
<textarea @bind="DesignField"></textarea>
<br />
<br />

<label>TimeStamp</label>
<br />
<textarea @bind="TimeStampField"></textarea>
<br />
<br />

<label>Language</label>
<br />
<textarea @bind="NewLanguage"></textarea>
<br />
<button @onclick="AddLanguage">Add Language</button>
<br />

<label>Technologies</label>
<br />
<textarea @bind="NewTechnology"></textarea>
<br />
<button @onclick="AddTechnology">Add Technology</button>
<br />

<label>Platforms</label>
<br />
<textarea @bind="NewPlatform"></textarea>
<br />
<button @onclick="AddPlatform">Add Platform</button>
<br />

<button @onclick="SaveChanges">Save</button>


@code {
    [Parameter]
    public string ProjectSlug { get; set; }

    public Project NewProject { get; set; }
    public string NewLanguage { get; set; }
    public string NewTechnology { get; set; }
    public string NewPlatform { get; set; }
    public string TitleField { get; set; }
    public string RequirementsField { get; set; }
    public string DesignField { get; set; }
    public string TimeStampField { get; set; }

    protected override async Task OnInitializedAsync()
    {
        NewProject = await ApiService.GetProjectBySlug(ProjectSlug);

        TitleField = NewProject.Title;
        RequirementsField = NewProject.Requirements;
        TimeStampField = NewProject.TimeStamp;
        DesignField = NewProject.Design;
    }

    public async Task SaveChanges()
    {
        NewProject.Title = TitleField;
        NewProject.Requirements = RequirementsField;
        NewProject.TimeStamp = TimeStampField;
        NewProject.Design = DesignField;

        await ApiService.Edit(NewProject);
        NavManager.NavigateTo("projects");
    }

    public async Task AddLanguage()
    {
        await ApiService.AssignTag(Project.LanguageCategory, NewProject.Id, NewLanguage);
    }

    public async Task AddTechnology()
    {
        await ApiService.AssignTag(Project.TechnologyCategory, NewProject.Id, NewTechnology);
    }

    public async Task AddPlatform()
    {
        await ApiService.AssignTag(Project.PlatformCategory, NewProject.Id, NewPlatform);
    }
}
